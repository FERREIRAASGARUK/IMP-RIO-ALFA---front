[{"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/index.js":"1","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Root/root.js":"2","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Root/privateRout..js":"3","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Home/home.js":"4","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Login/index.js":"5","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Profile.js":"6","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Setings/Settings.js":"7","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Senhas/Senhas.js":"8","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Promo/index.js":"9","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Login/index.js":"10","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/style.js":"11","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Cadastro user/index.js":"12","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Promo/style.js":"13","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/header.js":"14","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Login/style.js":"15","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/cardServer.js":"16","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/userServer.js":"17","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Produtos/produtos.js":"18","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Card/Card.js":"19","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Cadastro/index.js":"20","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/estilo.js":"21","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Produtos/estilo.js":"22","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Card/style.js":"23","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/Button.js":"24","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/Button2.js":"25","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Cadastro/style.js":"26","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/estilo.js":"27","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/password update/index.js":"28","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Cadastro Products/index.js":"29","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Senhas/estyle.js":"30","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Produtos.js":"31","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/products.js":"32"},{"size":166,"mtime":1612130105415,"results":"33","hashOfConfig":"34"},{"size":1907,"mtime":1612181961806,"results":"35","hashOfConfig":"34"},{"size":394,"mtime":1612130378314,"results":"36","hashOfConfig":"34"},{"size":338,"mtime":1612197714235,"results":"37","hashOfConfig":"34"},{"size":344,"mtime":1612197714235,"results":"38","hashOfConfig":"34"},{"size":1807,"mtime":1612210008352,"results":"39","hashOfConfig":"34"},{"size":161,"mtime":1612130378154,"results":"40","hashOfConfig":"34"},{"size":6092,"mtime":1612210008352,"results":"41","hashOfConfig":"34"},{"size":11757,"mtime":1612210008352,"results":"42","hashOfConfig":"34"},{"size":6597,"mtime":1612210008352,"results":"43","hashOfConfig":"34"},{"size":892,"mtime":1612210008352,"results":"44","hashOfConfig":"34"},{"size":365,"mtime":1612197714235,"results":"45","hashOfConfig":"34"},{"size":917,"mtime":1612210008352,"results":"46","hashOfConfig":"34"},{"size":4941,"mtime":1612210008356,"results":"47","hashOfConfig":"34"},{"size":577,"mtime":1612210008352,"results":"48","hashOfConfig":"34"},{"size":121,"mtime":1612210009708,"results":"49","hashOfConfig":"34"},{"size":123,"mtime":1612210009708,"results":"50","hashOfConfig":"34"},{"size":2938,"mtime":1612210008352,"results":"51","hashOfConfig":"34"},{"size":3304,"mtime":1612210008356,"results":"52","hashOfConfig":"34"},{"size":10048,"mtime":1612210008352,"results":"53","hashOfConfig":"34"},{"size":3273,"mtime":1612210008356,"results":"54","hashOfConfig":"34"},{"size":2193,"mtime":1612210008352,"results":"55","hashOfConfig":"34"},{"size":2072,"mtime":1612210008352,"results":"56","hashOfConfig":"34"},{"size":3911,"mtime":1612210008356,"results":"57","hashOfConfig":"34"},{"size":488,"mtime":1612210008356,"results":"58","hashOfConfig":"34"},{"size":311,"mtime":1612210008356,"results":"59","hashOfConfig":"34"},{"size":192,"mtime":1612210008352,"results":"60","hashOfConfig":"34"},{"size":349,"mtime":1612197714235,"results":"61","hashOfConfig":"34"},{"size":374,"mtime":1612197714235,"results":"62","hashOfConfig":"34"},{"size":496,"mtime":1612210008352,"results":"63","hashOfConfig":"34"},{"size":348,"mtime":1612199139716,"results":"64","hashOfConfig":"34"},{"size":121,"mtime":1612210009708,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"oczq9j",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/index.js",[],["139","140"],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Root/root.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Root/privateRout..js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Home/home.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Login/index.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Profile.js",["141","142","143","144"],"import React,{useState} from 'react'\nimport {Avatar, Grid, Paper} from '@material-ui/core/'\nimport Header from '../../Header/header'\nimport Container from '@material-ui/core/Container'\nimport style from './style.js'\nimport api from '../../../Services/cardServer'\nimport Produtos from './Produtos/produtos'\nimport Button from '@material-ui/core/Button'\n\nfunction Profile (){\n   \n    const estilo = style()\n    const data= localStorage.getItem('login')\n    const dados = (JSON.parse(data))\n    const[option , setOption] = useState('')\n    function produtos(){\n        \n        setOption('Products')\n        \n        \n    }\n \n   \n    return( \n        <div>\n            \n        <Header />\n        <Container  className={estilo.Container} component='main' xs='xl' >\n            <Grid className={estilo.item} item xs={12}>\n            \n                    <Paper className={estilo.Paper1}>\n                        <Grid item xs={15} className={estilo.grid1}>\n                            <Avatar   style={{ width:133,height:133,marginLeft:'10%',marginRight:'5%',marginTop:'3%'}}  />\n                                <Grid item  xl={15} className={estilo.grid11}>\n                                    <h1 style={{fontFamily:'Arial'}} >{dados.firstName}</h1>\n                                    <Grid item xs={15} className={estilo.grid111}>\n \n                                     \n                                     \n                                    </Grid>     \n                                </Grid>\n                            </Grid>\n                        \n                        <Produtos/>\n                       \n                    </Paper>\n \n            \n                            \n            </Grid>\n        </Container>\n         \n        </div>\n      \n        \n    )\n}\n\n\nexport default Profile;","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Setings/Settings.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Senhas/Senhas.js",["145"],"import * as Yup from 'yup'\nimport React, { useState } from 'react';\nimport estilo from './estyle';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik'\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport api from '../../../Services/userServer'\nimport { Usuario } from '../../Form Login/index';\n\n\n\n\n\n\n\nfunction Senhas() {\n\n\n    function Alert(props) {\n        return (<MuiAlert elevation={6} variant='filled' {...props} />)\n    }\n    const classes = estilo()\n    const contexto = React.useContext(Usuario)\n    const [msg, setMsg] = useState('')\n    const [result, setResult] = useState('')\n    const [Aberto, setAberto] = useState()\n    const vertical = 'top'\n    const horizontal = 'left'\n\n    function abrir() {\n        setAberto(true)\n    }\n    function fechar() {\n        setAberto(false)\n    }\n\n\n    const formik = useFormik({\n\n        initialValues: {\n            senhaAtual: '',\n            senhaNova: '',\n            senhaConfirmada: ''\n        },\n\n        validationSchema: Yup.object({\n            senhaAtual: Yup.string()\n                .min(8, <Typography color='error'>digite no mínimo 8 caractéres</Typography>)\n                .required(<Typography color='error'>Este campo não pode ficar vazio</Typography>),\n\n            senhaNova: Yup.string()\n                .min(8, <Typography color='error'>digite no mínimo 8 caractéres</Typography>)\n                .required(<Typography color='error'>Este campo não pode estar vazio</Typography>),\n\n            senhaConfirmada: Yup.string()\n                .min(8, <Typography color='error'>Este campo não pode estar vazio</Typography>)\n                .oneOf([Yup.ref('senhaNova'), null], <Typography color='error'>As senhas precisam ser iguais</Typography>)\n\n        }),\n        onSubmit: async (values) => {\n            const id = localStorage.getItem('login')\n            const Id = (JSON.parse(id))\n            const response = await api.get('http://localhost:3002/users/' + Id.id)\n            const resposta = response.data\n            let retorno;\n            let mensagem;\n\n            ////FAZER ATUALIZAÇÃO DE SENHA NO DB USERS E NO LOCALSTORAGE\n\n            resposta.senha === values.senhaAtual && values.senhaAtual === resposta.senhaConfirmada ? mensagem = 'Senha atualizada' : mensagem = 'A senha atual está incorreta'\n            resposta.senha === values.senhaAtual && values.senhaAtual === resposta.senhaConfirmada ? retorno = 'success' : retorno = 'error'\n            setMsg(mensagem)\n            setResult(retorno)\n\n            resposta.senha === values.senhaAtual && (resposta.senha = values.senhaNova)\n            alert(JSON.stringify(resposta))\n            async function trocar() {\n                await api.post('http://localhost:3002/users', resposta)\n            }\n\n\n\n\n            resposta.senha === values.senhaAtual && trocar();\n        }\n\n\n        // // resposta.email === values.email && alert('teste')\n        // alert(JSON.stringify(resposta))\n\n\n\n\n\n    })\n\n    return (\n        <div className={classes.root}>\n\n\n\n            <Snackbar anchorOrigin={{ vertical, horizontal }} open={Aberto} onClose={fechar} autoHideDuration={5000}>\n                <Alert severity={result}><div>{msg}</div></Alert>\n            </Snackbar>\n            <form onSubmit={formik.handleSubmit} className={classes.form}>\n                <h1 className={classes.titulo}>TROQUE SUA SENHA</h1>\n                <TextField\n                    placeholder=\"Senha atual\"\n                    variant=\"outlined\"\n                    label='Senha Atual'\n                    required id='text'\n                    type='text'\n                    name='senhaAtual'\n                    autoFocus\n                    fullWidth\n                    margin='normal'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.senhaAtual}\n                    className={classes.input}\n                />\n                {formik.touched.senhaAtual && formik.errors.senhaAtual ? (\n                    <div>{formik.errors.senhaAtual}</div>\n                ) : null}\n\n\n                <TextField\n                    placeholder=\"Nova senha \"\n                    variant=\"outlined\"\n                    label='Nova senha'\n                    required id='text'\n                    type='text'\n                    name='senhaNova'\n                    autoFocus\n                    fullWidth\n                    margin='normal'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.senhaNova}\n\n                    className={classes.input}\n                />\n                {formik.touched.senhaNova && formik.errors.senhaNova ? (\n                    <div>{formik.errors.senhaNova}</div>\n                ) : null}\n\n                <TextField\n                    placeholder=\"Repita sua senha\"\n                    variant=\"outlined\"\n                    label='Senha'\n                    type='password'\n                    name='senhaConfirmada'\n                    autoFocus\n                    fullWidth\n                    margin='normal'\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.senhaConfirmada}\n\n                    className={classes.input}\n                />\n                {formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? (\n                    <div>{formik.errors.senhaConfirmada}</div>\n                ) : null}\n\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className={classes.btn}\n                    onClick={() => abrir(true)}\n                >\n                    REDEFINIR\n              </Button>\n\n            </form>\n\n\n        </div>\n\n\n    )\n}\n\n\nexport default Senhas;\n","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Promo/index.js",["146","147","148","149","150","151"],"import React,{useState,useContext, createContext} from 'react'\nimport classe from './style'\nimport {Link,useHistory} from 'react-router-dom'\nimport api from  '../../Services/cardServer'\nimport TextField from '@material-ui/core/TextField'\nimport  InputAdornment  from '@material-ui/core/InputAdornment'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport {useFormik} from 'formik'\nimport * as Yup from 'yup'\nimport Typography from '@material-ui/core/Typography';\nimport {AddToHomeScreen, AddPhotoAlternate, AddShoppingCart,Title,MonetizationOn} from '@material-ui/icons';\nimport {Button,Snackbar,Container,Avatar} from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Header from '../Header/header'\n\n\n\nconst Formulario = () =>{\n\n            const classes = classe()\n\n            function Alert(props){\n                return(<MuiAlert elevation={6} variant='filled' {...props} />)\n            }\n\n        \n            const [Aberto, setAberto] = useState()\n            const vertical = 'top'\n            const horizontal = 'left'\n            const [Msg, setMsg] = useState()\n            const [retorno,setRetorno] = useState()\n                \n            function abrir (){\n                setAberto(true)\n            }\n            function fechar(){\n                setAberto(false)\n            }\n\n\n\n\n\n\n\n                 const formik = useFormik({\n                    initialValues:{\n                                title:\"\",\n                                price:'',\n                                imageUrl:'',\n                                url:''\n                    },\n                                \n\n                validationSchema: Yup.object({\n                    title: Yup.string()\n                            .min(10,<Typography color='error'>digite no mínimo 10 caractéres</Typography> )\n                            .max(200,<Typography color='error'>digite no máximo 50 caractéres</Typography> )\n                            .required(<Typography color='error'>Este campo não pode ficar vazio</Typography>),\n                        \n                    price: Yup.string()\n                        .required(<Typography color='error'>Este campo não pode estar vazio</Typography>),\n                      \n\n                    imageUrl: Yup.string()\n                        .url(<Typography color='error'>Use um link válido</Typography>)\n                        .required(<Typography color='error'>Este campo não pode estar vazio</Typography>),\n\n                  url: Yup.string()\n                        .required(<Typography color='error'>Este campo não pode estar vazio</Typography>)\n                        .url(<Typography color='error'>Use um link válido</Typography>),\n                        }),\n\n\n                    onSubmit:  async (values) =>{\n                                const dataStr = localStorage.getItem('login')\n                                const data = JSON.parse(dataStr);\n                                let email;\n                                email = data.email;\n                              \n\n                               \n                                        let msg;\n                                        let ret;\n                                        const datas = await api.get('/promotions')\n                                        const promo = datas.data\n                                        const prod = promo.filter( e => {\n                                            return( e.imageUrl === values.imageUrl)\n                                            \n                                        })\n\n                                async function verificar (){ \n                                        if(prod.length === 0){\n                                            await api.post('/promotions', {...values,usuario: email,})\n                                            msg = 'Produto cadastrado' \n                                            ret = 'success'\n                                        }\n                                       else{\n                                           msg='Produto já cadastrado use outra imagem!'\n                                           ret='error'\n                                       }\n                                        setMsg(msg)\n                                        setRetorno(ret)\n                                     \n                                    }\n\n                                   \n                                        verificar()\n\n                                }})\n                            \n        \n\n                        \n               \n\n    return(  \n        <div>\n            <Header/>\n                <Snackbar anchorOrigin={{vertical, horizontal}} open={Aberto} onClose={fechar} autoHideDuration={5000}>\n                    <Alert severity={retorno}><div>{Msg}</div></Alert>\n                </Snackbar>\n             <Container component='main' maxWidth='sm' >\n                 \n                    <div className={classes.paper}>\n                        <Avatar className={classes.imagem}>\n                            <AddShoppingCart/>\n                        </Avatar>\n                        <h1 className={classes.title} >CADASTRE SEUS PRODUTOS</h1>\n                        <form onSubmit={formik.handleSubmit} className={classes.form}>\n                            <TextField \n                                placeholder=\"Título ou descrição \" \n                                variant=\"outlined\"\n                                label='Descrição/title' \n                                required id='title'\n                                type='text'\n                                name='title'\n                                autoFocus\n                                fullWidth\n                                margin='normal'\n\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment className={classes.adorno}>\n                                            <Title/>\n                                        </InputAdornment>\n                                    )}}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.title}\n                                className={classes.input}\n                            />\n\n\n                            {formik.touched.title && formik.errors.title ? (\n                            <div>{formik.errors.title}</div>\n                            ) : null}\n                            <div className={classes.input}></div>\n                            \n                            <TextField \n                                placeholder=\"Digite o preço do produto\" \n                                variant=\"outlined\" \n                                label='preço' \n                                required id='price'\n                                type='number' \n                                name='price' \n                                fullWidth\n                                autoFocus\n                                margin='normal'\n                                 InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment className={classes.adorno}>\n                                            <MonetizationOn/>\n                                        </InputAdornment>\n                                    )}}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.price} \n                                className={classes.input}\n                                />\n                                \n\n                                {formik.touched.price && formik.errors.price? (\n                                <div>{formik.errors.price}</div>\n                                ) : null}\n\n                                <div className={classes.input}></div>\n\n                            <TextField \n                                placeholder=\"coloque o link da imageUrl\" \n                                variant=\"outlined\" \n                                label='imageUrl' \n                                required id='url'\n                                type='url' \n                                name='imageUrl' \n                                fullWidth\n                                autoFocus\n                                margin='normal'\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment className={classes.adorno}>\n                                            <AddPhotoAlternate/>\n                                        </InputAdornment>\n                                    )}}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.imageUrl} \n                                className={classes.input}\n                                />\n                                {formik.touched.imageUrl && formik.errors.imageUrl? (\n                                <div>{formik.errors.imageUrl}</div>\n                                ) : null}\n\n                                <div className={classes.input}></div>\n\n                                <TextField \n                                placeholder=\"Digite/cole o link do site \" \n                                variant=\"outlined\" \n                                label='Url' \n                                required id='Url'\n                                type='url' \n                                name='url' \n                                fullWidth\n                                autoFocus\n                                margin='normal'\n                                InputProps={{\n                                    startAdornment:(\n                                        <InputAdornment className={classes.adorno}>\n                                            <AddToHomeScreen/>\n                                        </InputAdornment>\n                                    )}}\n                                onChange={formik.handleChange}\n                                onBlur={formik.handleBlur}\n                                value={formik.values.url} \n                                className={classes.input}\n                                />\n                                \n\n                                {formik.touched.url && formik.errors.url? (\n                                <div>{formik.errors.url}</div>\n                                ) : null}\n\n                                <div className={classes.input}></div>\n                                                                \n                                <Button\n                                        type=\"submit\"\n                                        fullWidth\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        className={classes.btn}\n                                        onClick={()=> abrir(true)}\n                                    >\n                                        Salvar \n                                </Button>\n                                \n\n                        </form>\n                    </div>\n           \n                </Container>\n\n        </div>\n            \n        \n           \n\n\n        \n    )\n}\n\nexport default Formulario;","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Login/index.js",["152"],"import React, { useState, useContext, createContext } from 'react'\nimport classe from './style'\nimport { Link, useHistory } from 'react-router-dom'\nimport api from '../../Services/userServer'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Button, Snackbar, Container, Avatar } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\n\nexport const Usuario = createContext()\n\nexport const Validar = (props) => {\n\n    const [valid, setValid] = useState(false)\n\n    return (\n        <Usuario.Provider\n            value={{ valid, setValid }}\n        >\n            {props.children}\n        </Usuario.Provider>\n    )\n\n}\n\nconst Login = () => {\n\n\n\n    function Alert(props) {\n        return (<MuiAlert elevation={6} variant='filled' {...props} />)\n    }\n\n\n    const contexto = useContext(Usuario)\n    const history = useHistory()\n    const [msg, setMsg] = useState('')\n    const [result, setResult] = useState('')\n    const [Aberto, setAberto] = useState()\n    const vertical = 'top'\n    const horizontal = 'left'\n    const classes = classe()\n\n\n\n    function abrir() {\n        setAberto(true)\n    }\n    function fechar() {\n        setAberto(false)\n    }\n\n\n\n\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            senha: ''\n        },\n\n\n        validationSchema: Yup.object({\n            senha: Yup.string()\n                .min(8, <Typography color='error'>digite no mínimo 8 caractéres</Typography>)\n                .required(<Typography color='error'>Este campo não pode ficar vazio</Typography>),\n\n            email: Yup.string()\n                .email(<Typography color='error'>Endereço de email inválido</Typography>)\n                .required(<Typography color='error'>Este campo não pode estar vazio</Typography>),\n        }),\n\n\n\n\n\n        onSubmit: async (values) => {\n\n\n\n\n\n            let retorno;\n            let mensagem;\n            let validar;\n            let id;\n            const response = await api.get('http://localhost:3002/users')\n            const resposta = response.data\n            let result = resposta.filter(e => {\n                return (e.email === values.email && e.senha === values.senha)\n            })\n            result[0] ? retorno = 'success' : retorno = 'error'\n            retorno === 'success' ? mensagem = 'Login realizado' : mensagem = 'Usuário ou senha incorreta'\n            retorno === 'success' && (validar = result[0])\n            retorno === 'success' && history.push('/')\n            localStorage.setItem('login', JSON.stringify(result[0]))\n            contexto.setValid(validar)\n            setMsg(mensagem)\n            setResult(retorno)\n\n\n\n\n\n\n\n\n        }\n    })\n\n    return (\n        <Container component='main' maxWidth='xs' >\n            <div className={classes.paper}>\n\n                <Snackbar anchorOrigin={{ vertical, horizontal }} open={Aberto} onClose={fechar} autoHideDuration={5000}>\n                    <Alert severity={result}><div>{msg}</div></Alert>\n                </Snackbar>\n                <Avatar className={classes.imagem}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <h1 className={classes.title} >Acesse sua conta</h1>\n                <form onSubmit={formik.handleSubmit} className={classes.form}>\n                    <TextField\n                        placeholder=\"Digitte seu email \"\n                        variant=\"outlined\"\n                        label='Usuário'\n                        required id='text'\n                        type='email'\n                        name='email'\n                        autoFocus\n                        fullWidth\n                        margin='normal'\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment className={classes.adorno}>\n                                    <AccountCircle />\n                                </InputAdornment>\n                            )\n                        }}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                        className={classes.input}\n                    />\n                    {formik.touched.senha && formik.errors.senha ? (\n                        <div>{formik.errors.senha}</div>\n                    ) : null}\n                    <div className={classes.input}></div>\n\n                    <TextField\n                        placeholder=\"Utilize letras, números e símbolos\"\n                        variant=\"outlined\"\n                        label='Senha'\n                        required id='senha'\n                        type='senha'\n                        name='senha'\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.senha}\n                        fullWidth\n                        autoFocus\n                        margin='normal'\n                    />\n                    {formik.touched.senha && formik.errors.senha ? (\n                        <div>{formik.errors.senha}</div>\n                    ) : null}\n                    <div className={classes.input}></div>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.btn}\n                        onClick={() => abrir(true)}\n                    >\n                        Acesse sua conta\n\n\n                        /testando\n                                </Button>\n\n                    <Grid container>\n                        <Grid item xs>\n                            <Link style={{ textDecoration: 'none', color: '#0000FF' }} to='/senha'>Esqueceu sua senha?</Link>\n                        </Grid>\n                        <Grid item >\n                            <Link style={{ textDecoration: 'none', color: '#0000FF' }} to='/Register'> Não tem uma conta? crie uma</Link>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            </div>\n\n        </Container>\n\n    )\n}\n\n\n\nexport default Login;\n\n","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/style.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Cadastro user/index.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Promo/style.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/header.js",["153","154","155","156","157","158"],"import React, { useState, useContext, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { Link, useHistory } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport classes from './estilo'\nimport { Contexto } from '../../Root/root'\nimport { IconButton, Paper, } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Usuario } from '../Form Login/index'\nimport Botao from '../Header/Button/Button'\nimport Btn from './Button/Button2'\nimport ShoppingCart from '@material-ui/icons/ShoppingCartOutlined';\nimport Popover from '@material-ui/core/Popover';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Remove from '@material-ui/icons/RemoveCircle'\nimport Button from '@material-ui/core/Button'\nimport { Produtos } from '../../components/Hooks/Produtos'\nimport api from '../../Services/userServer'\nimport Api from '../../Services/products'\n\nconst Header = () => {\n  const user = useContext(Usuario)\n  const Prod = useContext(Produtos)\n  const history = useHistory()\n  const estilo = classes()\n  const contexto = useContext(Contexto)\n  const [search, setSearch] = useState('')\n  const [Open, setOpen] = useState(false)\n  const [elemento, setElementos] = useState([])\n  const [total, setTotal] = useState()\n\n\n\n\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n  function setar(event) {\n\n    setSearch(event.target.value)\n  }\n  function mudar() {\n    contexto.setPesquisa(search)\n    history.push('/')\n  }\n\n  function Verificar() {\n    return (\n      user.valid ? <Botao /> : <Btn />\n    )\n\n  }\n  async function cart() {\n    const id = (JSON.parse(localStorage.getItem('login')))\n    const prods = await Api.get('/products  ')\n    const prodsValids = prods.data\n    setElementos(prodsValids)\n\n\n\n  }\n\n  // const Total = () => {\n\n\n  //   let prices = [];\n  //   prices = elemento.map(e => e.price)\n  //   // setTotal(prices.reduce((a, b) => a + b))\n\n  // }\n\n\n  const abrir = () => {\n    setOpen(true)\n\n    cart()\n\n\n  }\n\n\n\n  return (\n\n    <div>\n\n      <Grid className={estilo.header} container spacing={0}>\n\n        <Grid item xs={2}>\n\n          <Link to='/' onClick={() => { contexto.setPesquisa(null) }} style={{ textDecoration: 'none' }}>\n            <Typography variant='h1' className={estilo.h1}>World Promotions</Typography>\n          </Link>\n\n        </Grid>\n\n        <Grid item xs={7}>\n          <Paper component='form' className={estilo.papel}>\n            <input\n              variant=\"filled\"\n              className={estilo.input}\n              placeholder=\"Escolha seu produto\"\n              inputProps={{ 'aria-label': 'search google maps' }}\n              onChange={setar}\n\n            />\n            <IconButton style={{ padding: 10 }} onClick={() => mudar()}>\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n\n        </Grid>\n        <div className={estilo.cart}>\n          <Link onClick={() => abrir()}>\n            <ShoppingCart color='secondary' fontSize='large' />\n          </Link>\n\n        </div>\n\n        {console.log(elemento)}\n        <Popover open={Open} onClose={handleClose} className={estilo.carrinho}>\n          {\n            elemento && elemento.map(e => {\n\n              return (\n\n                <div>\n\n                  <div className={estilo.produto}>\n                    <img className={estilo.image} alt='produto' src={e.imageUrl} />\n                    <div>\n\n                      <Typography className={estilo.title}>\n                        {e.title}\n                      </Typography>\n\n                      <Typography className={estilo.value}>\n                        R${e.price}\n                      </Typography>\n                    </div>\n\n                    <div className={estilo.quantidade}>\n                      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                        <IconButton className={estilo.btn}>\n                          <AddCircleIcon />\n                        </IconButton>\n                        <IconButton className={estilo.btn2}>\n                          <Remove />\n                        </IconButton>\n                      </div>\n\n                      <div className={estilo.valor}>\n                        <Typography style={{ fontWeight: 1000 }}>R${e.price}</Typography>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n\n\n              )\n\n            })\n          }\n          <div className={estilo.footer}>\n            <Button variant='contained' style={{ background: '#00FF00', marginLeft: 30, marginTop: 30, width: 133, height: 33 }}>\n              Finalizar\n            </Button>\n\n            <Typography style={{ marginTop: 30 }}> Total:R$</Typography>\n          </div>\n        </Popover>\n\n        <Grid item xs={1}   >\n          <Verificar />\n        </Grid>\n      </Grid>\n\n\n\n    </div>)\n\n\n}\n\n\n\n\n\n\n\nexport default Header;","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Login/style.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/cardServer.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/userServer.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Produtos/produtos.js",["159","160"],"import React, { useState } from 'react'\nimport api from '../../../../Services/cardServer'\nimport Grid from '@material-ui/core/Grid'\nimport estilos from './estilo'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Alert from '@material-ui/lab/Alert'\n\n\n\n\n\n\n\nconst Produtos = () => {\n\n    const estilo = estilos()\n    let produtos;\n    let produto;\n    let prod;\n    let user;\n    let User;\n\n    const [products, setProducts] = useState([])\n    async function Buscar() {\n\n        user = localStorage.getItem('login')\n        User = (JSON.parse(user))\n\n\n        prod = await api.get('/promotions')\n        produtos = prod.data;\n        produto = produtos.filter( e =>{\n         return( e.usuario === User.email)\n        })\n        setProducts(produto)\n      \n    }\n      Buscar()\n      \n    return (\n        <div>\n            <h1 style={{fontFamily:'Arial'}}>SEUS PRODUTOS CADASTRADOS</h1>\n        <Grid className={estilo.pai} container spacing={0} direction='row'>\n            \n            { products.map(elemento =>{\n                             return(\n                                <Grid item xs={3} >\n\n                                    <Paper className={estilo.paper} >\n                                        {\n                                            <>\n                                            \n                                                <a className={estilo.link} href={elemento.url} \n                                                    target='_blank' \n                                                    rel='noreferrer noopener'> \n                                                        <img  className={estilo.image} src={elemento.imageUrl}/>\n                                                </a>\n\n                                                <a  className={estilo.link} \n                                                    href={elemento.url} \n                                                    target='_blank' \n                                                    rel='noreferrer noopener'> \n                                                         <Typography className={estilo.title} color=\"primary\">{elemento.title}</Typography>\n                                                </a>\n                                                <div className={estilo.precoPai}>\n                                                    <span className={estilo.preco}>R${ elemento.price}</span>\n                                                </div>\n                                                \n                                                 \n                                            </>}\n                                    </Paper>\n                                </Grid>\n                                 \n                             )\n                         })}\n                         \n        </Grid>\n\n        </div>\n\n    )\n}\n\n\nexport default Produtos;\n\n\n","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Card/Card.js",["161","162"],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Cadastro/index.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/estilo.js",["163"],"import { makeStyles } from '@material-ui/core/styles'\nimport style from 'styled-components'\n\nconst estilo = makeStyles({\n\n    type: {\n        marginTop: 10,\n        marginLeft: '20%',\n        marginRight: '100%',\n        textDecoration: 'none',\n        color: 'white', fontWeight: 900,\n        fontFamily: 'Arial'\n    },\n    cart: {\n        marginTop: '2%'\n    },\n    carrinho: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        height: 500,\n        marginLeft: 800,\n        marginTop: '5%',\n        borderRadius: 10,\n        width: 900,\n        position: 'absolute',\n\n\n\n    },\n    btn: {\n        width: 30,\n        marginLeft: 10,\n        height: 30,\n        marginTop: 10,\n        color: 'orange'\n    },\n    btn2: {\n        width: 30,\n        marginRight: 10,\n        height: 30,\n        marginTop: 10,\n        color: 'orange'\n    },\n    quantidade: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        border: 'solid 1px #2272c3',\n        borderRadius: 10,\n        width: 150,\n        height: 100,\n        marginTop: 20\n\n    },\n    value: {\n        marginTop: 7,\n        marginLeft: 5,\n        color: '#1976d2',\n        dispay: \"flex\",\n        flexDirection: 'row'\n    },\n    valor: {\n        height: 50,\n        width: '100%',\n        display: \"flex\",\n        flexDirection: 'row',\n        justifyContent: \"center\"\n    },\n    title: {\n        color: '#808080',\n        fontWeight: 500,\n        width: 280,\n        marginTop: 30\n    },\n    image: {\n        width: 70,\n        height: 70,\n        marginLeft: 15,\n        marginTop: 20\n    },\n\n    produto: {\n        height: 150,\n        width: 490,\n        margin: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        paddingRight: 15,\n        marginRight: 0,\n        borderRadius: 4,\n    },\n    footer: {\n        height: 100,\n        width: 490,\n        margin: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        paddingRight: 15,\n        marginRight: 0,\n        background: '#1976d2'\n    },\n    papel: {\n\n        display: 'flex',\n        alignItems: 'center',\n        width: '50%',\n        marginTop: '3%',\n        marginLeft: '20%'\n    },\n    input: {\n        width: \"100%\",\n        height: 40,\n        borderRadius: 4,\n        color: 'black',\n        background: 'white',\n        border: 'solid 0px white',\n\n    },\n\n    header: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        background: '#1976d2',\n        height: 100,\n        position: 'relative',\n        boxShadow: '0 2px 13px 0 rgba(0,0,0,.33)'\n    },\n    h1: {\n        color: 'white',\n        fontFamily: 'Arial',\n        fontSize: 25,\n        marginLeft: '3%',\n        marginTop: '10%',\n    },\n    link2: {\n        textDecoration: 'none',\n        color: 'white',\n        fontFamily: 'bolder',\n        fontSize: 18,\n        position: 'relative',\n        marginTop: '50%'\n\n\n\n    },\n    botao2: {\n        border: 'solid 4px #ff4040',\n        borderRadius: 5,\n        background: '#ff4040',\n        marginLeft: 20,\n        height: 50,\n        position: 'relative',\n        marginTop: '30%'\n\n    }\n\n\n})\n\nexport default estilo;","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Profile/Produtos/estilo.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Card/style.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/Button.js",["164","165"],"import React, { useContext, useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport Person from '@material-ui/icons/Person';\nimport Settings from '@material-ui/icons/Settings'\nimport Lock from '@material-ui/icons/Lock'\nimport Create from '@material-ui/icons/Create'\nimport Exit from '@material-ui/icons/ExitToApp'\nimport estilo from './estilo'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Usuario } from '../../Form Login/index'\n\n\n\nfunction Botao() {\n    let nome;\n    const classes = estilo()\n    const history = useHistory()\n    const palavra = useContext(Usuario)\n    const [anchorEl, setAnchorEl] = useState(null);\n    palavra.valid ? nome = 'PROFILE' : nome = 'ENTRAR'\n\n    function clicar(ev) {\n        setAnchorEl(ev.currentTarget)\n    }\n    function fechar() {\n        setAnchorEl(null)\n    }\n    function sair() {\n        palavra.setValid(false)\n        history.push('/')\n    }\n\n    return (\n        <div>\n            <Button\n                aria-controls=\"customized-menu\"\n                aria-haspopup=\"true\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                style={{ marginTop: '20%' }}\n                onClick={clicar}\n            >\n                {nome}\n            </Button>\n            <Menu\n                elevation={0}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                id=\"customized-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={fechar}>\n                <Link className={classes.itens} to='/Perfil'>\n                    <MenuItem>\n                        <ListItemIcon >\n                            <Person fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Profile\" />\n                    </MenuItem>\n                </Link>\n                <Link className={classes.itens} to='/Settings'>\n                    <MenuItem>\n                        <ListItemIcon>\n                            <Settings fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Configurações\" />\n                    </MenuItem>\n                </Link>\n                <Link className={classes.itens} to='/senha'>\n                    <MenuItem>\n                        <ListItemIcon>\n                            <Lock fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Senha\" />\n                    </MenuItem>\n                </Link>\n                <Link className={classes.itens} to='/Criar'>\n                    <MenuItem>\n                        <ListItemIcon>\n                            <Create fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Criar\" />\n                    </MenuItem>\n                </Link>\n                <Link className={classes.itens} onClick={() => sair()} >\n                    <MenuItem >\n                        <ListItemIcon>\n                            <Exit fontSize=\"small\" />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Sair\" />\n                    </MenuItem>\n                </Link>\n            </Menu>\n        </div>\n\n    )\n}\n\n\nexport default Botao;\n","/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/Button2.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Form Cadastro/style.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Header/Button/estilo.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/password update/index.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/pages/Cadastro Products/index.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Profile/Senhas/estyle.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/components/Hooks/Produtos.js",[],"/home/marcusvinicius/Área de Trabalho/projeto oficial/Projeto-Oficial-World-Promotion/front/src/Services/products.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":11},{"ruleId":"170","severity":1,"message":"174","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":14},{"ruleId":"170","severity":1,"message":"175","line":15,"column":11,"nodeType":"172","messageId":"173","endLine":15,"endColumn":17},{"ruleId":"170","severity":1,"message":"176","line":16,"column":14,"nodeType":"172","messageId":"173","endLine":16,"endColumn":22},{"ruleId":"170","severity":1,"message":"177","line":25,"column":11,"nodeType":"172","messageId":"173","endLine":25,"endColumn":19},{"ruleId":"170","severity":1,"message":"178","line":1,"column":24,"nodeType":"172","messageId":"173","endLine":1,"endColumn":34},{"ruleId":"170","severity":1,"message":"179","line":1,"column":36,"nodeType":"172","messageId":"173","endLine":1,"endColumn":49},{"ruleId":"170","severity":1,"message":"180","line":3,"column":9,"nodeType":"172","messageId":"173","endLine":3,"endColumn":13},{"ruleId":"170","severity":1,"message":"181","line":3,"column":14,"nodeType":"172","messageId":"173","endLine":3,"endColumn":24},{"ruleId":"170","severity":1,"message":"182","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":21},{"ruleId":"170","severity":1,"message":"183","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":12},{"ruleId":"170","severity":1,"message":"184","line":94,"column":17,"nodeType":"172","messageId":"173","endLine":94,"endColumn":19},{"ruleId":"170","severity":1,"message":"185","line":1,"column":39,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"171","line":18,"column":8,"nodeType":"172","messageId":"173","endLine":18,"endColumn":11},{"ruleId":"170","severity":1,"message":"186","line":23,"column":9,"nodeType":"172","messageId":"173","endLine":23,"endColumn":13},{"ruleId":"170","severity":1,"message":"187","line":30,"column":10,"nodeType":"172","messageId":"173","endLine":30,"endColumn":15},{"ruleId":"170","severity":1,"message":"188","line":30,"column":17,"nodeType":"172","messageId":"173","endLine":30,"endColumn":25},{"ruleId":"170","severity":1,"message":"189","line":55,"column":11,"nodeType":"172","messageId":"173","endLine":55,"endColumn":13},{"ruleId":"170","severity":1,"message":"190","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":57,"column":57,"nodeType":"193","endLine":57,"endColumn":113},{"ruleId":"170","severity":1,"message":"194","line":19,"column":11,"nodeType":"172","messageId":"173","endLine":19,"endColumn":15},{"ruleId":"195","severity":1,"message":"196","line":32,"column":8,"nodeType":"197","endLine":32,"endColumn":24,"suggestions":"198"},{"ruleId":"170","severity":1,"message":"199","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":13},{"ruleId":"170","severity":1,"message":"200","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"201","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":18},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"no-unused-vars","'api' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'option' is assigned a value but never used.","'produtos' is defined but never used.","'contexto' is assigned a value but never used.","'useContext' is defined but never used.","'createContext' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'AccountCircle' is defined but never used.","'Grid' is defined but never used.","'id' is defined but never used.","'useEffect' is defined but never used.","'Prod' is assigned a value but never used.","'total' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'id' is assigned a value but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Cart' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUrls'. Either include it or remove the dependency array.","ArrayExpression",["204"],"'style' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"205","fix":"206"},"Update the dependencies array to be: [busca.pesquisa, setUrls]",{"range":"207","text":"208"},[782,798],"[busca.pesquisa, setUrls]"]