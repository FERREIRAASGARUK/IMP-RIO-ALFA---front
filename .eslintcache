[{"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/index.js":"1","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Root/root.js":"2","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/password update/index.js":"3","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Root/privateRout..js":"4","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Cadastro Products/index.js":"5","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Home/home.js":"6","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Login/index.js":"7","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Login/index.js":"8","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Profile.js":"9","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Setings/Settings.js":"10","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/style.js":"11","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Senhas/Senhas.js":"12","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/header.js":"13","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Produtos.js":"14","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Cadastro user/index.js":"15","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Promo/index.js":"16","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Card/Card.js":"17","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Login/style.js":"18","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/userServer.js":"19","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/cardServer.js":"20","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Produtos/produtos.js":"21","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Senhas/estyle.js":"22","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/estilo.js":"23","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/products.js":"24","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/Button2.js":"25","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/Button.js":"26","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Cadastro/index.js":"27","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Promo/style.js":"28","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Card/style.js":"29","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Produtos/estilo.js":"30","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/estilo.js":"31","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Cadastro/style.js":"32"},{"size":154,"mtime":1612309793510,"results":"33","hashOfConfig":"34"},{"size":1403,"mtime":1612309793506,"results":"35","hashOfConfig":"34"},{"size":307,"mtime":1612309793510,"results":"36","hashOfConfig":"34"},{"size":356,"mtime":1612309793506,"results":"37","hashOfConfig":"34"},{"size":329,"mtime":1612309793510,"results":"38","hashOfConfig":"34"},{"size":294,"mtime":1612309793510,"results":"39","hashOfConfig":"34"},{"size":301,"mtime":1612309793510,"results":"40","hashOfConfig":"34"},{"size":5816,"mtime":1612309793506,"results":"41","hashOfConfig":"34"},{"size":1792,"mtime":1612309793510,"results":"42","hashOfConfig":"34"},{"size":131,"mtime":1612309793510,"results":"43","hashOfConfig":"34"},{"size":892,"mtime":1612309793510,"results":"44","hashOfConfig":"34"},{"size":5469,"mtime":1612309793510,"results":"45","hashOfConfig":"34"},{"size":5677,"mtime":1612316130344,"results":"46","hashOfConfig":"34"},{"size":308,"mtime":1612309793506,"results":"47","hashOfConfig":"34"},{"size":345,"mtime":1612309793510,"results":"48","hashOfConfig":"34"},{"size":7759,"mtime":1612309793506,"results":"49","hashOfConfig":"34"},{"size":2963,"mtime":1612309793506,"results":"50","hashOfConfig":"34"},{"size":515,"mtime":1612309793506,"results":"51","hashOfConfig":"34"},{"size":122,"mtime":1612309793506,"results":"52","hashOfConfig":"34"},{"size":122,"mtime":1612309793506,"results":"53","hashOfConfig":"34"},{"size":2038,"mtime":1612309793510,"results":"54","hashOfConfig":"34"},{"size":435,"mtime":1612309793510,"results":"55","hashOfConfig":"34"},{"size":2985,"mtime":1612312785986,"results":"56","hashOfConfig":"34"},{"size":122,"mtime":1612309793506,"results":"57","hashOfConfig":"34"},{"size":433,"mtime":1612309793506,"results":"58","hashOfConfig":"34"},{"size":3236,"mtime":1612309793506,"results":"59","hashOfConfig":"34"},{"size":7019,"mtime":1612309793506,"results":"60","hashOfConfig":"34"},{"size":802,"mtime":1612309793506,"results":"61","hashOfConfig":"34"},{"size":1762,"mtime":1612309793506,"results":"62","hashOfConfig":"34"},{"size":1635,"mtime":1612309793510,"results":"63","hashOfConfig":"34"},{"size":171,"mtime":1612309793506,"results":"64","hashOfConfig":"34"},{"size":276,"mtime":1612309793506,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ciawkz",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/index.js",[],["138","139"],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Root/root.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/password update/index.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Root/privateRout..js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Cadastro Products/index.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Home/home.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Login/index.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Login/index.js",["140"],"import React, { useState, useContext, createContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Button, Snackbar, Container, Avatar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport api from '../../Services/userServer';\nimport classe from './style';\n\nexport const Usuario = createContext();\n\nexport const Validar = (props) => {\n  const [valid, setValid] = useState(false);\n\n  return (\n    <Usuario.Provider value={{ valid, setValid }}>\n      {props.children}\n    </Usuario.Provider>\n  );\n};\n\nconst Login = () => {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const contexto = useContext(Usuario);\n  const history = useHistory();\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n  const classes = classe();\n\n  function abrir() {\n    setAberto(true);\n  }\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      senha: '',\n    },\n\n    validationSchema: Yup.object({\n      senha: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no mínimo 8 caractéres</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo não pode ficar vazio</Typography>\n        ),\n\n      email: Yup.string()\n        .email(\n          <Typography color=\"error\">Endereço de email inválido</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n        ),\n    }),\n\n    onSubmit: async (values) => {\n      let retorno;\n      let mensagem;\n      let validar;\n      let id;\n      const response = await api.get('http://localhost:3002/users');\n      const resposta = response.data;\n      const result = resposta.filter(\n        (e) => e.email === values.email && e.senha === values.senha\n      );\n      result[0] ? (retorno = 'success') : (retorno = 'error');\n      retorno === 'success'\n        ? (mensagem = 'Login realizado')\n        : (mensagem = 'Usuário ou senha incorreta');\n      retorno === 'success' && (validar = result[0]);\n      retorno === 'success' && history.push('/');\n      localStorage.setItem('login', JSON.stringify(result[0]));\n      contexto.setValid(validar);\n      setMsg(mensagem);\n      setResult(retorno);\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Snackbar\n          anchorOrigin={{ vertical, horizontal }}\n          open={Aberto}\n          onClose={fechar}\n          autoHideDuration={5000}\n        >\n          <Alert severity={result}>\n            <div>{msg}</div>\n          </Alert>\n        </Snackbar>\n        <Avatar className={classes.imagem}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <h1 className={classes.title}>Acesse sua conta</h1>\n        <form onSubmit={formik.handleSubmit} className={classes.form}>\n          <TextField\n            placeholder=\"Digitte seu email \"\n            variant=\"outlined\"\n            label=\"Usuário\"\n            required\n            id=\"text\"\n            type=\"email\"\n            name=\"email\"\n            autoFocus\n            fullWidth\n            margin=\"normal\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment className={classes.adorno}>\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n            }}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n            className={classes.input}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n          <div className={classes.input} />\n\n          <TextField\n            placeholder=\"Utilize letras, números e símbolos\"\n            variant=\"outlined\"\n            label=\"Senha\"\n            required\n            id=\"senha\"\n            type=\"senha\"\n            name=\"senha\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.senha}\n            fullWidth\n            autoFocus\n            margin=\"normal\"\n          />\n          {formik.touched.senha && formik.errors.senha ? (\n            <div>{formik.errors.senha}</div>\n          ) : null}\n          <div className={classes.input} />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.btn}\n            onClick={() => abrir(true)}\n          >\n            Acesse sua conta\n          </Button>\n\n          <Grid container>\n            <Grid item xs>\n              <Link\n                style={{ textDecoration: 'none', color: '#0000FF' }}\n                to=\"/senha\"\n              >\n                Esqueceu sua senha?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link\n                style={{ textDecoration: 'none', color: '#0000FF' }}\n                to=\"/Register\"\n              >\n                {' '}\n                Não tem uma conta? crie uma\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Profile.js",["141","142","143","144","145"],"import React, { useState } from 'react';\nimport { Avatar, Grid, Paper } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Header from '../../Header/header';\nimport style from './style.js';\nimport api from '../../../Services/cardServer';\nimport Produtos from './Produtos/produtos';\n\nfunction Profile() {\n  const estilo = style();\n  const data = localStorage.getItem('login');\n  const dados = JSON.parse(data);\n  const [option, setOption] = useState('');\n  let produtos;\n  let produto;\n  let prod;\n  let user;\n  let User;\n\nconst [products, setProducts] = useState([]);\nasync function Buscar() {\n    user = localStorage.getItem('login');\n    User = JSON.parse(user);\n\n    prod = await api.get('/promotions');\n    produtos = prod.data;\n    produto = produtos.filter((e) => e.usuario === User.email);\n    setProducts(produto);\n\n}\n\n\n  return (\n    <div>\n      <Header />\n      <Container className={estilo.Container} component=\"main\" xs=\"xl\">\n        <Grid className={estilo.item} item xs={12}>\n          <Paper className={estilo.Paper1}>\n            <Grid item xs={15} className={estilo.grid1}>\n              <Avatar\n                style={{\n                  width: 133,\n                  height: 133,\n                  marginLeft: '10%',\n                  marginRight: '5%',\n                  marginTop: '3%',\n                }}\n              />\n              <Grid item xl={15} className={estilo.grid11}>\n                <h1 style={{ fontFamily: 'Arial' }}>{dados.firstName}</h1>\n                <Grid item xs={15} className={estilo.grid111} />\n              </Grid>\n            </Grid>\n               <Produtos/>\n          </Paper>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Profile;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Setings/Settings.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/style.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Senhas/Senhas.js",["146"],"import * as Yup from 'yup';\nimport React, { useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport estilo from './estyle';\nimport api from '../../../Services/userServer';\nimport { Usuario } from '../../Form Login/index';\n\nfunction Senhas() {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const classes = estilo();\n  const contexto = React.useContext(Usuario);\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n\n  function abrir() {\n    setAberto(true);\n  }\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      senhaAtual: '',\n      senhaNova: '',\n      senhaConfirmada: '',\n    },\n\n    validationSchema: Yup.object({\n      senhaAtual: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no mínimo 8 caractéres</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo não pode ficar vazio</Typography>\n        ),\n\n      senhaNova: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no mínimo 8 caractéres</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n        ),\n\n      senhaConfirmada: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n        )\n        .oneOf(\n          [Yup.ref('senhaNova'), null],\n          <Typography color=\"error\">As senhas precisam ser iguais</Typography>\n        ),\n    }),\n    onSubmit: async (values) => {\n      const id = localStorage.getItem('login');\n      const Id = JSON.parse(id);\n      const response = await api.get(`http://localhost:3002/users/${Id.id}`);\n      const resposta = response.data;\n      let retorno;\n      let mensagem;\n\n      /// /FAZER ATUALIZAÇÃO DE SENHA NO DB USERS E NO LOCALSTORAGE\n\n      resposta.senha === values.senhaAtual\n      && values.senhaAtual === resposta.senhaConfirmada\n        ? (mensagem = 'Senha atualizada')\n        : (mensagem = 'A senha atual está incorreta');\n      resposta.senha === values.senhaAtual\n      && values.senhaAtual === resposta.senhaConfirmada\n        ? (retorno = 'success')\n        : (retorno = 'error');\n      setMsg(mensagem);\n      setResult(retorno);\n\n      resposta.senha === values.senhaAtual\n        && (resposta.senha = values.senhaNova);\n      alert(JSON.stringify(resposta));\n      async function trocar() {\n        await api.post('http://localhost:3002/users', resposta);\n      }\n\n      resposta.senha === values.senhaAtual && trocar();\n    },\n\n    // // resposta.email === values.email && alert('teste')\n    // alert(JSON.stringify(resposta))\n  });\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={Aberto}\n        onClose={fechar}\n        autoHideDuration={5000}\n      >\n        <Alert severity={result}>\n          <div>{msg}</div>\n        </Alert>\n      </Snackbar>\n      <form onSubmit={formik.handleSubmit} className={classes.form}>\n        <h1 className={classes.titulo}>TROQUE SUA SENHA</h1>\n        <TextField\n          placeholder=\"Senha atual\"\n          variant=\"outlined\"\n          label=\"Senha Atual\"\n          required\n          id=\"text\"\n          type=\"text\"\n          name=\"senhaAtual\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaAtual}\n          className={classes.input}\n        />\n        {formik.touched.senhaAtual && formik.errors.senhaAtual ? (\n          <div>{formik.errors.senhaAtual}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Nova senha \"\n          variant=\"outlined\"\n          label=\"Nova senha\"\n          required\n          id=\"text\"\n          type=\"text\"\n          name=\"senhaNova\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaNova}\n          className={classes.input}\n        />\n        {formik.touched.senhaNova && formik.errors.senhaNova ? (\n          <div>{formik.errors.senhaNova}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Repita sua senha\"\n          variant=\"outlined\"\n          label=\"Senha\"\n          type=\"password\"\n          name=\"senhaConfirmada\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaConfirmada}\n          className={classes.input}\n        />\n        {formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? (\n          <div>{formik.errors.senhaConfirmada}</div>\n        ) : null}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.btn}\n          onClick={() => abrir(true)}\n        >\n          REDEFINIR\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Senhas;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/header.js",["147","148","149","150","151","152","153"],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Produtos.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/pages/Cadastro user/index.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Promo/index.js",["154","155","156","157","158","159"],"import React, { useState, useContext, createContext } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  AddToHomeScreen,\n  AddPhotoAlternate,\n  AddShoppingCart,\n  Title,\n  MonetizationOn,\n} from '@material-ui/icons';\nimport { Button, Snackbar, Container, Avatar } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport api from '../../Services/cardServer';\nimport classe from './style';\nimport Header from '../Header/header';\n\nconst Formulario = () => {\n  const classes = classe();\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n  const [Msg, setMsg] = useState();\n  const [retorno, setRetorno] = useState();\n\n  function abrir() {\n    setAberto(true);\n  }\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      title: '',\n      price: '',\n      imageUrl: '',\n      url: '',\n    },\n\n    validationSchema: Yup.object({\n      title: Yup.string()\n        .min(\n          10,\n        <Typography color=\"error\">digite no mínimo 10 caractéres</Typography>\n        )\n        .max(\n          200,\n        <Typography color=\"error\">digite no máximo 50 caractéres</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo não pode ficar vazio</Typography>\n        ),\n\n      price: Yup.string().required(\n        <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n      ),\n\n      imageUrl: Yup.string()\n        .url(<Typography color=\"error\">Use um link válido</Typography>)\n        .required(\n          <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n        ),\n\n      url: Yup.string()\n        .required(\n          <Typography color=\"error\">Este campo não pode estar vazio</Typography>\n        )\n        .url(<Typography color=\"error\">Use um link válido</Typography>),\n    }),\n\n    onSubmit: async (values) => {\n      const dataStr = localStorage.getItem('login');\n      const data = JSON.parse(dataStr);\n      let email;\n      email = data.email;\n\n      let msg;\n      let ret;\n      const datas = await api.get('/promotions');\n      const promo = datas.data;\n      const prod = promo.filter((e) => e.imageUrl === values.imageUrl);\n\n      async function verificar() {\n        if (prod.length === 0) {\n          await api.post('/promotions', { ...values, usuario: email });\n          msg = 'Produto cadastrado';\n          ret = 'success';\n        } else {\n          msg = 'Produto já cadastrado use outra imagem!';\n          ret = 'error';\n        }\n        setMsg(msg);\n        setRetorno(ret);\n      }\n\n      verificar();\n    },\n  });\n\n  return (\n    <div>\n      <Header />\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={Aberto}\n        onClose={fechar}\n        autoHideDuration={5000}\n      >\n        <Alert severity={retorno}>\n          <div>{Msg}</div>\n        </Alert>\n      </Snackbar>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <div className={classes.paper}>\n          <Avatar className={classes.imagem}>\n            <AddShoppingCart />\n          </Avatar>\n          <h1 className={classes.title}>CADASTRE SEUS PRODUTOS</h1>\n          <form onSubmit={formik.handleSubmit} className={classes.form}>\n            <TextField\n              placeholder=\"Título ou descrição \"\n              variant=\"outlined\"\n              label=\"Descrição/title\"\n              required\n              id=\"title\"\n              type=\"text\"\n              name=\"title\"\n              autoFocus\n              fullWidth\n              margin=\"normal\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment className={classes.adorno}>\n                    <Title />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.title}\n              className={classes.input}\n            />\n\n            {formik.touched.title && formik.errors.title ? (\n              <div>{formik.errors.title}</div>\n            ) : null}\n            <div className={classes.input} />\n\n            <TextField\n              placeholder=\"Digite o preço do produto\"\n              variant=\"outlined\"\n              label=\"preço\"\n              required\n              id=\"price\"\n              type=\"number\"\n              name=\"price\"\n              fullWidth\n              autoFocus\n              margin=\"normal\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment className={classes.adorno}>\n                    <MonetizationOn />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.price}\n              className={classes.input}\n            />\n\n            {formik.touched.price && formik.errors.price ? (\n              <div>{formik.errors.price}</div>\n            ) : null}\n\n            <div className={classes.input} />\n\n            <TextField\n              placeholder=\"coloque o link da imageUrl\"\n              variant=\"outlined\"\n              label=\"imageUrl\"\n              required\n              id=\"url\"\n              type=\"url\"\n              name=\"imageUrl\"\n              fullWidth\n              autoFocus\n              margin=\"normal\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment className={classes.adorno}>\n                    <AddPhotoAlternate />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.imageUrl}\n              className={classes.input}\n            />\n            {formik.touched.imageUrl && formik.errors.imageUrl ? (\n              <div>{formik.errors.imageUrl}</div>\n            ) : null}\n\n            <div className={classes.input} />\n\n            <TextField\n              placeholder=\"Digite/cole o link do site \"\n              variant=\"outlined\"\n              label=\"Url\"\n              required\n              id=\"Url\"\n              type=\"url\"\n              name=\"url\"\n              fullWidth\n              autoFocus\n              margin=\"normal\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment className={classes.adorno}>\n                    <AddToHomeScreen />\n                  </InputAdornment>\n                ),\n              }}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.url}\n              className={classes.input}\n            />\n\n            {formik.touched.url && formik.errors.url ? (\n              <div>{formik.errors.url}</div>\n            ) : null}\n\n            <div className={classes.input} />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.btn}\n              onClick={() => abrir(true)}\n            >\n              Salvar\n            </Button>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Formulario;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Card/Card.js",["160","161"],"import React, { useEffect, useState, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Contexto } from '../../../Root/root';\nimport api from '../../../Services/cardServer.js';\nimport Api from '../../../Services/products';\nimport classe from './style';\nimport { Produtos } from '../Produtos';\nimport { Usuario } from '../../Form Login/index';\n\nfunction Card() {\n  const User = useContext(Usuario);\n  const busca = useContext(Contexto);\n  const Cart = useContext(Produtos);\n  const estilo = classe();\n  const [cards, setCards] = useState();\n\n  let urls;\n\n  useEffect(() => {\n    setUrls();\n  }, [busca.pesquisa]);\n\n  async function setUrls() {\n    busca.pesquisa\n      ? (urls = `/promotions?_order=desc&_sort=id&title_like=${busca.pesquisa}`)\n      : (urls = '/promotions?_order=desc&_sort=id');\n\n    const response = await api.get(urls);\n    setCards(response.data);\n  }\n\n  async function adicionar(props) {\n\n    const currentUser = JSON.parse(localStorage.getItem('login'));\n    const ID = currentUser.id;\n    props.usuario = ID;\n    props.quantidade = 1\n    User.valid\n      ? await Api.post('http://localhost:3005/products',props)\n      : alert('faça login');\n  }\n\n  return (\n    <div>\n      <Grid className={estilo.pai} container spacing={1} direction=\"row\">\n        {cards &&\n          cards.map((elemento) => (\n            <Grid item xs={3}>\n              <Paper className={estilo.paper}>\n                <>\n                  <a\n                    className={estilo.link}\n                    href={elemento.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    <img\n                      className={estilo.image}\n                      alt=\"imagem\"\n                      src={elemento.imageUrl}\n                    />\n                  </a>\n\n                  <a\n                    className={estilo.link}\n                    href={elemento.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    <Typography className={estilo.title}>\n                      {elemento.title}\n                    </Typography>\n                  </a>\n                  <div className={estilo.precoPai}>\n                    <span className={estilo.preco}>\n                      R$\n                      {elemento.price}\n                    </span>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => adicionar(elemento)}\n                    >\n                      Adicionar\n                    </Button>\n                  </div>\n                </>\n              </Paper>\n            </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Card;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Login/style.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/userServer.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/cardServer.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Produtos/produtos.js",["162","163"],"import React, { useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport estilos from './estilo';\nimport api from '../../../../Services/cardServer';\n\nconst Produtos = () => {\n  const estilo = estilos();\n  let produtos;\n  let produto;\n  let prod;\n  let user;\n  let User;\n\n  const [products, setProducts] = useState([]);\n  async function Buscar() {\n    user = localStorage.getItem('login');\n    User = JSON.parse(user);\n\n    prod = await api.get('/promotions');\n    produtos = prod.data;\n    produto = produtos.filter((e) => e.usuario === User.email);\n    setProducts(produto);\n  }\n  Buscar();\n\n  return (\n    <div>\n      <h1 style={{ fontFamily: 'Arial' }}>SEUS PRODUTOS CADASTRADOS</h1>\n      <Grid className={estilo.pai} container spacing={0} direction=\"row\">\n        {products.map((elemento) => (\n          <Grid item xs={3}>\n            <Paper className={estilo.paper}>\n              <>\n                <a\n                  className={estilo.link}\n                  href={elemento.url}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <img className={estilo.image} src={elemento.imageUrl} />\n                </a>\n\n                <a\n                  className={estilo.link}\n                  href={elemento.url}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                >\n                  <Typography className={estilo.title} color=\"primary\">\n                    {elemento.title}\n                  </Typography>\n                </a>\n                <div className={estilo.precoPai}>\n                  <span className={estilo.preco}>\n                    R$\n                    {elemento.price}\n                  </span>\n                </div>\n              </>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Produtos;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Senhas/estyle.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/estilo.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/Services/products.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/Button2.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/Button.js",["164","165"],"import React, { useContext, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport Person from '@material-ui/icons/Person';\nimport Settings from '@material-ui/icons/Settings';\nimport Lock from '@material-ui/icons/Lock';\nimport Create from '@material-ui/icons/Create';\nimport Exit from '@material-ui/icons/ExitToApp';\nimport { Link, useHistory } from 'react-router-dom';\nimport estilo from './estilo';\nimport { Usuario } from '../../Form Login/index';\n\nfunction Botao() {\n  let nome;\n  const classes = estilo();\n  const history = useHistory();\n  const palavra = useContext(Usuario);\n  const [anchorEl, setAnchorEl] = useState(null);\n  palavra.valid ? (nome = 'PROFILE') : (nome = 'ENTRAR');\n\n  function clicar(ev) {\n    setAnchorEl(ev.currentTarget);\n  }\n  function fechar() {\n    setAnchorEl(null);\n  }\n  function sair() {\n    palavra.setValid(false);\n    history.push('/');\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        style={{ marginTop: '20%' }}\n        onClick={clicar}\n      >\n        {nome}\n      </Button>\n      <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={fechar}\n      >\n        <Link className={classes.itens} to=\"/Perfil\">\n          <MenuItem>\n            <ListItemIcon>\n              <Person fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </MenuItem>\n        </Link>\n        <Link className={classes.itens} to=\"/Settings\">\n          <MenuItem>\n            <ListItemIcon>\n              <Settings fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Configurações\" />\n          </MenuItem>\n        </Link>\n        <Link className={classes.itens} to=\"/senha\">\n          <MenuItem>\n            <ListItemIcon>\n              <Lock fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Senha\" />\n          </MenuItem>\n        </Link>\n        <Link className={classes.itens} to=\"/Criar\">\n          <MenuItem>\n            <ListItemIcon>\n              <Create fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Criar\" />\n          </MenuItem>\n        </Link>\n        <Link className={classes.itens} onClick={() => sair()}>\n          <MenuItem>\n            <ListItemIcon>\n              <Exit fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Sair\" />\n          </MenuItem>\n        </Link>\n      </Menu>\n    </div>\n  );\n}\n\nexport default Botao;\n","/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Cadastro/index.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Promo/style.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Hooks/Card/style.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Profile/Profile/Produtos/estilo.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Header/Button/estilo.js",[],"/home/marcusvinicius/Área de Trabalho/TESTANDO 123456/TRABALHO-DE-HOJE/src/components/Form Cadastro/style.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":78,"column":11,"nodeType":"172","messageId":"173","endLine":78,"endColumn":13},{"ruleId":"170","severity":1,"message":"174","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"175","line":14,"column":10,"nodeType":"172","messageId":"173","endLine":14,"endColumn":16},{"ruleId":"170","severity":1,"message":"176","line":14,"column":18,"nodeType":"172","messageId":"173","endLine":14,"endColumn":27},{"ruleId":"170","severity":1,"message":"177","line":21,"column":8,"nodeType":"172","messageId":"173","endLine":21,"endColumn":16},{"ruleId":"170","severity":1,"message":"178","line":22,"column":16,"nodeType":"172","messageId":"173","endLine":22,"endColumn":22},{"ruleId":"170","severity":1,"message":"179","line":17,"column":9,"nodeType":"172","messageId":"173","endLine":17,"endColumn":17},{"ruleId":"170","severity":1,"message":"180","line":17,"column":8,"nodeType":"172","messageId":"173","endLine":17,"endColumn":11},{"ruleId":"170","severity":1,"message":"181","line":19,"column":10,"nodeType":"172","messageId":"173","endLine":19,"endColumn":26},{"ruleId":"170","severity":1,"message":"182","line":23,"column":9,"nodeType":"172","messageId":"173","endLine":23,"endColumn":13},{"ruleId":"170","severity":1,"message":"183","line":31,"column":10,"nodeType":"172","messageId":"173","endLine":31,"endColumn":15},{"ruleId":"170","severity":1,"message":"184","line":31,"column":17,"nodeType":"172","messageId":"173","endLine":31,"endColumn":25},{"ruleId":"170","severity":1,"message":"185","line":32,"column":7,"nodeType":"172","messageId":"173","endLine":32,"endColumn":10},{"ruleId":"186","severity":1,"message":"187","line":94,"column":6,"nodeType":"188","endLine":94,"endColumn":8,"suggestions":"189"},{"ruleId":"170","severity":1,"message":"190","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":37},{"ruleId":"170","severity":1,"message":"191","line":1,"column":39,"nodeType":"172","messageId":"173","endLine":1,"endColumn":52},{"ruleId":"170","severity":1,"message":"192","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"193","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"194","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":21},{"ruleId":"170","severity":1,"message":"195","line":17,"column":8,"nodeType":"172","messageId":"173","endLine":17,"endColumn":12},{"ruleId":"170","severity":1,"message":"196","line":16,"column":9,"nodeType":"172","messageId":"173","endLine":16,"endColumn":13},{"ruleId":"186","severity":1,"message":"197","line":24,"column":6,"nodeType":"188","endLine":24,"endColumn":22,"suggestions":"198"},{"ruleId":"170","severity":1,"message":"199","line":5,"column":8,"nodeType":"172","messageId":"173","endLine":5,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":43,"column":19,"nodeType":"202","endLine":43,"endColumn":75},{"ruleId":"170","severity":1,"message":"203","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":17},{"ruleId":"170","severity":1,"message":"204","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":18},"no-native-reassign",["205"],"no-negated-in-lhs",["206"],"no-unused-vars","'id' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'option' is assigned a value but never used.","'setOption' is assigned a value but never used.","'products' is assigned a value but never used.","'Buscar' is defined but never used.","'contexto' is assigned a value but never used.","'api' is defined but never used.","'SettingsEthernet' is defined but never used.","'Prod' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'aux' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.","ArrayExpression",["207"],"'useContext' is defined but never used.","'createContext' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'AccountCircle' is defined but never used.","'Grid' is defined but never used.","'Cart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUrls'. Either include it or remove the dependency array.",["208"],"'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [cart]",{"range":"213","text":"214"},"Update the dependencies array to be: [busca.pesquisa, setUrls]",{"range":"215","text":"216"},[2370,2372],"[cart]",[769,785],"[busca.pesquisa, setUrls]"]