{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcos/\\xC1rea de Trabalho/World Products/World Products/src/components/Profile/Senhas/Senhas.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport React, { useEffect, useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport estilo from './estyle';\nimport api from '../../../Services/userServer';\nimport { Usuario } from '../../Form Login/index';\nimport { profileImg } from '../Setings/Settings';\n\nfunction Senhas() {\n  _s();\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  const classes = estilo();\n  const contexto = React.useContext(Usuario);\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n  const [retorno, setRetorno] = useState(0);\n  const [user, setUser] = useState();\n  const ctx = React.useContext();\n\n  function abrir() {\n    setAberto(true);\n  }\n\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      senhaAtual: '',\n      senhaNova: '',\n      senhaConfirmada: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Digite um email v\\xE1lido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"este campo precisa ser preenchido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)),\n      senhaAtual: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"digite no m\\xEDnimo 8 caract\\xE9res\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode ficar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)),\n      senhaNova: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"digite no m\\xEDnimo 8 caract\\xE9res\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode estar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)),\n      senhaConfirmada: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode estar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)).oneOf([Yup.ref('senhaNova'), null], /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"As senhas precisam ser iguais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }),\n    onSubmit: values => {\n      let dados;\n      let usuarios = [];\n      let usuario;\n\n      async function buscar() {\n        dados = await api.get('/users');\n        usuarios = dados.data;\n        usuario = usuarios.filter(e => {\n          return e.email === values.email && e.senha === values.senhaAtual;\n        });\n        usuario[0] && (usuario[0].senha = values.senhaNova);\n        usuario[0] && setUser(usuario[0]);\n        usuario[0] ? setResult('success') : setResult('error');\n        usuario[0] && setRetorno(retorno + 1);\n        usuario[0] ? setMsg('Senha alterada') : setMsg('Email ou senha estÃ£o incorretos');\n\n        async function postar() {\n          return await api.put(`/users/${user.id}`, user);\n        }\n\n        usuario[0] && postar();\n      }\n\n      buscar();\n      alert(JSON.stringify(usuario));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      open: Aberto,\n      onClose: fechar,\n      autoHideDuration: 5000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: result,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.titulo,\n        children: \"TROQUE SUA SENHA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \" Email\",\n        variant: \"outlined\",\n        label: \"Email\",\n        required: true,\n        id: \"text\",\n        type: \"email\",\n        name: \"email\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), formik.touched.senhaAtual && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Senha atual\",\n        variant: \"outlined\",\n        label: \"Senha Atual\",\n        required: true,\n        id: \"text\",\n        type: \"password\",\n        name: \"senhaAtual\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaAtual,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), formik.touched.senhaAtual && formik.errors.senhaAtual ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaAtual\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Nova senha \",\n        variant: \"outlined\",\n        label: \"Nova senha\",\n        required: true,\n        id: \"text\",\n        type: \"password\",\n        name: \"senhaNova\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaNova,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), formik.touched.senhaNova && formik.errors.senhaNova ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaNova\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Repita sua senha\",\n        variant: \"outlined\",\n        label: \"Senha\",\n        type: \"password\",\n        name: \"senhaConfirmada\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaConfirmada,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaConfirmada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.btn,\n        onClick: () => abrir(true),\n        children: \"REDEFINIR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Senhas, \"WoHouTGX1OlTu8r2DBplmmDYFy0=\", false, function () {\n  return [useFormik];\n});\n\n_c = Senhas;\nexport default Senhas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Senhas\");","map":{"version":3,"sources":["/home/marcos/Ãrea de Trabalho/World Products/World Products/src/components/Profile/Senhas/Senhas.js"],"names":["Yup","React","useEffect","useState","MuiAlert","useFormik","TextField","Button","Typography","Snackbar","estilo","api","Usuario","profileImg","Senhas","Alert","props","classes","contexto","useContext","msg","setMsg","result","setResult","Aberto","setAberto","vertical","horizontal","retorno","setRetorno","user","setUser","ctx","abrir","fechar","formik","initialValues","email","senhaAtual","senhaNova","senhaConfirmada","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","dados","usuarios","usuario","buscar","get","data","filter","e","senha","postar","put","id","alert","JSON","stringify","root","handleSubmit","form","titulo","handleChange","handleBlur","input","touched","errors","btn"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport React, { useEffect, useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport estilo from './estyle';\nimport api from '../../../Services/userServer';\nimport { Usuario } from '../../Form Login/index';\nimport  {profileImg} from '../Setings/Settings'\n\nfunction Senhas() {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const classes = estilo();\n  const contexto = React.useContext(Usuario);\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n  const [retorno, setRetorno] = useState(0)\n  const [user,setUser] = useState()\n  const ctx = React.useContext()\n\n  function abrir() {\n    setAberto(true);\n  }\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email:'',\n      senhaAtual: '',\n      senhaNova: '',\n      senhaConfirmada: '',\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n      .email(<Typography color=\"error\">Digite um email vÃ¡lido</Typography>) \n      .required(<Typography color=\"error\">este campo precisa ser preenchido</Typography>)\n      ,\n      senhaAtual: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no mÃ­nimo 8 caractÃ©res</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo nÃ£o pode ficar vazio</Typography>\n        ),\n\n      senhaNova: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no mÃ­nimo 8 caractÃ©res</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo nÃ£o pode estar vazio</Typography>\n        ),\n\n      senhaConfirmada: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">Este campo nÃ£o pode estar vazio</Typography>\n        )\n        .oneOf(\n          [Yup.ref('senhaNova'), null],\n          <Typography color=\"error\">As senhas precisam ser iguais</Typography>\n        ),\n    }),\n    onSubmit: (values) => {\n        let dados;\n        let usuarios = [];\n        let usuario;\n\n        \n         \n\n\n\n       async function buscar(){\n          dados = await api.get('/users')\n          usuarios =  dados.data;\n          usuario =  usuarios.filter( e => {\n          \n            \n           return(\n           e.email === values.email && e.senha === values.senhaAtual)\n         })\n\n\n\n         usuario[0] && (usuario[0].senha = values.senhaNova);\n         \n\n        usuario[0]  && setUser(usuario[0])\n        usuario[0] ? setResult('success'): setResult('error')\n        usuario[0]&& setRetorno(retorno+1)\n        usuario[0] ? setMsg('Senha alterada') : setMsg('Email ou senha estÃ£o incorretos')\n        async function postar(){\n            \n         return(await api.put(`/users/${user.id}`,user))\n        }\n         usuario[0]&& postar()\n\n       }\n        \n\n        buscar()\n        \n       alert(JSON.stringify(usuario))\n        \n        }\n        \n\n  });\n     \n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={Aberto}\n        onClose={fechar}\n        autoHideDuration={5000}\n      >\n        <Alert severity={result}>\n          <div>{msg}</div>\n        </Alert>\n      </Snackbar>\n      <form onSubmit={formik.handleSubmit} className={classes.form}>\n        <h1 className={classes.titulo}>TROQUE SUA SENHA</h1>\n        <TextField\n          placeholder=\" Email\"\n          variant=\"outlined\"\n          label=\"Email\"\n          required\n          id=\"text\"\n          type=\"email\"\n          name=\"email\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n          className={classes.input}\n        />\n        {formik.touched.senhaAtual && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Senha atual\"\n          variant=\"outlined\"\n          label=\"Senha Atual\"\n          required\n          id=\"text\"\n          type=\"password\"\n          name=\"senhaAtual\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaAtual}\n          className={classes.input}\n        />\n        {formik.touched.senhaAtual && formik.errors.senhaAtual ? (\n          <div>{formik.errors.senhaAtual}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Nova senha \"\n          variant=\"outlined\"\n          label=\"Nova senha\"\n          required\n          id=\"text\"\n          type=\"password\"\n          name=\"senhaNova\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaNova}\n          className={classes.input}\n        />\n        {formik.touched.senhaNova && formik.errors.senhaNova ? (\n          <div>{formik.errors.senhaNova}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Repita sua senha\"\n          variant=\"outlined\"\n          label=\"Senha\"\n          type=\"password\"\n          name=\"senhaConfirmada\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaConfirmada}\n          className={classes.input}\n        />\n        {formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? (\n          <div>{formik.errors.senhaConfirmada}</div>\n        ) : null}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.btn}\n          onClick={() => abrir(true)}\n        >\n          REDEFINIR\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Senhas;\n"]},"metadata":{},"sourceType":"module"}