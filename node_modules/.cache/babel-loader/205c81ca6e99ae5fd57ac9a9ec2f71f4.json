{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcos/\\xC1rea de Trabalho/PROJETO/projeto/a/src/components/Profile/Senhas/Senhas.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport React, { useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport estilo from './estyle';\nimport api from '../../../Services/userServer';\nimport { Usuario } from '../../Form Login/index';\n\nfunction Senhas() {\n  _s();\n\n  function Alert(props) {\n    return /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  const classes = estilo();\n  const contexto = React.useContext(Usuario);\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n\n  function abrir() {\n    setAberto(true);\n  }\n\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      senhaAtual: '',\n      senhaNova: '',\n      senhaConfirmada: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Digite um email v\\xE1lido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"este campo precisa ser preenchido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)),\n      senhaAtual: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"digite no m\\xEDnimo 8 caract\\xE9res\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode ficar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)),\n      senhaNova: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"digite no m\\xEDnimo 8 caract\\xE9res\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)).required( /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode estar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)),\n      senhaConfirmada: Yup.string().min(8, /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Este campo n\\xE3o pode estar vazio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)).oneOf([Yup.ref('senhaNova'), null], /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"As senhas precisam ser iguais\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }),\n    onSubmit: values => {\n      let dados;\n      let usuarios = [];\n      let usuario;\n\n      async function buscar() {\n        dados = await api.get('/users');\n        usuarios = dados.data;\n        usuario = usuarios.filter(e => {\n          e.email === values.email && e.senha === values.senhaAtual;\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical,\n        horizontal\n      },\n      open: Aberto,\n      onClose: fechar,\n      autoHideDuration: 5000,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: result,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.titulo,\n        children: \"TROQUE SUA SENHA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \" Email\",\n        variant: \"outlined\",\n        label: \"Email\",\n        required: true,\n        id: \"text\",\n        type: \"email\",\n        name: \"email\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), formik.touched.senhaAtual && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Senha atual\",\n        variant: \"outlined\",\n        label: \"Senha Atual\",\n        required: true,\n        id: \"text\",\n        type: \"text\",\n        name: \"senhaAtual\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaAtual,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), formik.touched.senhaAtual && formik.errors.senhaAtual ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaAtual\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Nova senha \",\n        variant: \"outlined\",\n        label: \"Nova senha\",\n        required: true,\n        id: \"text\",\n        type: \"password\",\n        name: \"senhaNova\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaNova,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), formik.touched.senhaNova && formik.errors.senhaNova ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaNova\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Repita sua senha\",\n        variant: \"outlined\",\n        label: \"Senha\",\n        type: \"password\",\n        name: \"senhaConfirmada\",\n        autoFocus: true,\n        fullWidth: true,\n        margin: \"normal\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.senhaConfirmada,\n        className: classes.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.senhaConfirmada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"secondary\",\n        className: classes.btn,\n        onClick: () => abrir(true),\n        children: \"REDEFINIR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Senhas, \"32HZC8jzaivpRsJ0qnU2xcEkXy4=\", false, function () {\n  return [useFormik];\n});\n\n_c = Senhas;\nexport default Senhas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Senhas\");","map":{"version":3,"sources":["/home/marcos/√Årea de Trabalho/PROJETO/projeto/a/src/components/Profile/Senhas/Senhas.js"],"names":["Yup","React","useState","MuiAlert","useFormik","TextField","Button","Typography","Snackbar","estilo","api","Usuario","Senhas","Alert","props","classes","contexto","useContext","msg","setMsg","result","setResult","Aberto","setAberto","vertical","horizontal","abrir","fechar","formik","initialValues","email","senhaAtual","senhaNova","senhaConfirmada","validationSchema","object","string","required","min","oneOf","ref","onSubmit","values","dados","usuarios","usuario","buscar","get","data","filter","e","senha","root","handleSubmit","form","titulo","handleChange","handleBlur","input","touched","errors","btn"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport React, { useState } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useFormik } from 'formik';\nimport { TextField, Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport estilo from './estyle';\nimport api from '../../../Services/userServer';\nimport { Usuario } from '../../Form Login/index';\n\nfunction Senhas() {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const classes = estilo();\n  const contexto = React.useContext(Usuario);\n  const [msg, setMsg] = useState('');\n  const [result, setResult] = useState('');\n  const [Aberto, setAberto] = useState();\n  const vertical = 'top';\n  const horizontal = 'left';\n\n  function abrir() {\n    setAberto(true);\n  }\n  function fechar() {\n    setAberto(false);\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      email:'',\n      senhaAtual: '',\n      senhaNova: '',\n      senhaConfirmada: '',\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string()\n      .email(<Typography color=\"error\">Digite um email v√°lido</Typography>) \n      .required(<Typography color=\"error\">este campo precisa ser preenchido</Typography>)\n      ,\n      senhaAtual: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no m√≠nimo 8 caract√©res</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo n√£o pode ficar vazio</Typography>\n        ),\n\n      senhaNova: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">digite no m√≠nimo 8 caract√©res</Typography>\n        )\n        .required(\n          <Typography color=\"error\">Este campo n√£o pode estar vazio</Typography>\n        ),\n\n      senhaConfirmada: Yup.string()\n        .min(\n          8,\n        <Typography color=\"error\">Este campo n√£o pode estar vazio</Typography>\n        )\n        .oneOf(\n          [Yup.ref('senhaNova'), null],\n          <Typography color=\"error\">As senhas precisam ser iguais</Typography>\n        ),\n    }),\n    onSubmit: (values) => {\n        let dados;\n        let usuarios = [];\n        let usuario;\n       async function buscar(){\n          dados = await api.get('/users')\n          usuarios =  dados.data;\n         usuario =  usuarios.filter( e => {\n           e.email === values.email && e.senha === values.senhaAtual\n         })\n       }\n\n       \n        \n        \n        }\n  });\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        open={Aberto}\n        onClose={fechar}\n        autoHideDuration={5000}\n      >\n        <Alert severity={result}>\n          <div>{msg}</div>\n        </Alert>\n      </Snackbar>\n      <form onSubmit={formik.handleSubmit} className={classes.form}>\n        <h1 className={classes.titulo}>TROQUE SUA SENHA</h1>\n        <TextField\n          placeholder=\" Email\"\n          variant=\"outlined\"\n          label=\"Email\"\n          required\n          id=\"text\"\n          type=\"email\"\n          name=\"email\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n          className={classes.input}\n        />\n        {formik.touched.senhaAtual && formik.errors.email ? (\n          <div>{formik.errors.email}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Senha atual\"\n          variant=\"outlined\"\n          label=\"Senha Atual\"\n          required\n          id=\"text\"\n          type=\"text\"\n          name=\"senhaAtual\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaAtual}\n          className={classes.input}\n        />\n        {formik.touched.senhaAtual && formik.errors.senhaAtual ? (\n          <div>{formik.errors.senhaAtual}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Nova senha \"\n          variant=\"outlined\"\n          label=\"Nova senha\"\n          required\n          id=\"text\"\n          type=\"password\"\n          name=\"senhaNova\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaNova}\n          className={classes.input}\n        />\n        {formik.touched.senhaNova && formik.errors.senhaNova ? (\n          <div>{formik.errors.senhaNova}</div>\n        ) : null}\n\n        <TextField\n          placeholder=\"Repita sua senha\"\n          variant=\"outlined\"\n          label=\"Senha\"\n          type=\"password\"\n          name=\"senhaConfirmada\"\n          autoFocus\n          fullWidth\n          margin=\"normal\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.senhaConfirmada}\n          className={classes.input}\n        />\n        {formik.touched.senhaConfirmada && formik.errors.senhaConfirmada ? (\n          <div>{formik.errors.senhaConfirmada}</div>\n        ) : null}\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.btn}\n          onClick={() => abrir(true)}\n        >\n          REDEFINIR\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default Senhas;\n"]},"metadata":{},"sourceType":"module"}