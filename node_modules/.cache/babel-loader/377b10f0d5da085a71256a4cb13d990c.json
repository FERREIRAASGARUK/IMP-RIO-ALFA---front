{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marcos/\\xC1rea de Trabalho/PROJETO/projeto/a/src/components/Hooks/Card/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Contexto } from '../../../Root/root';\nimport api from '../../../Services/cardServer.js';\nimport Api from '../../../Services/products';\nimport classe from './style';\nimport { Produtos } from '../Produtos';\nimport { Usuario } from '../../Form Login/index';\nimport users from '../../../Services/userServer';\n\nfunction Card() {\n  _s();\n\n  const User = useContext(Usuario);\n  const busca = useContext(Contexto);\n  const Cart = useContext(Produtos);\n  const estilo = classe();\n  const [cards, setCards] = useState();\n  let urls;\n  useEffect(() => {\n    setUrls();\n  }, [busca.pesquisa]);\n\n  async function setUrls() {\n    busca.pesquisa ? urls = `/promotions?_order=desc&_sort=id&title_like=${busca.pesquisa}` : urls = '/promotions?_order=desc&_sort=id';\n    const response = await api.get(urls);\n    setCards(response.data);\n  }\n\n  async function adicionar(props) {\n    const currentUser = JSON.parse(localStorage.getItem('login'));\n    const carrinho = await Api.get(`/products&Usuario=${currentUser.id}`);\n    console.log(carrinho); // const semelhante = validar.data.filter( e =>{\n    //  return(e.title === props.title && e.Usuario == props.id)\n    // })\n    // const ID = currentUser.id;\n    // // props.id = props.id+1\n    // props.Usuario = ID\n    // async function atualizar(){ \n    //   (props.quantidade = props.quantidade + 1 )\n    //     localStorage.setItem('aux',props.quantidade)\n    // return ( \n    //   await Api.put(`http://localhost:2000/products/${props.id}`,props)\n    //   )}\n    //   async function postar(){ \n    //     localStorage.setItem('aux',props.quantidade)\n    // return ( \n    //   await Api.post(`http://localhost:2000/products`,props)\n    //   )}\n    // User.validn    // semelhante.length >= 1 ? atualizar()  :  postar();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      className: estilo.pai,\n      container: true,\n      spacing: 1,\n      direction: \"row\",\n      children: cards && cards.map(elemento => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: estilo.paper,\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: estilo.link,\n              href: elemento.url,\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: estilo.image,\n                alt: \"imagem\",\n                src: elemento.imageUrl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: estilo.link,\n              href: elemento.url,\n              target: \"_blank\",\n              rel: \"noreferrer noopener\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: estilo.title,\n                children: elemento.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: estilo.precoPai,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: estilo.preco,\n                children: [\"R$\", elemento.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: () => adicionar(elemento),\n                children: \"Adicionar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"aRwGaLbwy3c2qaIh7f8+MXTyfZQ=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/marcos/√Årea de Trabalho/PROJETO/projeto/a/src/components/Hooks/Card/Card.js"],"names":["React","useEffect","useState","useContext","Grid","Paper","Typography","Button","Contexto","api","Api","classe","Produtos","Usuario","users","Card","User","busca","Cart","estilo","cards","setCards","urls","setUrls","pesquisa","response","get","data","adicionar","props","currentUser","JSON","parse","localStorage","getItem","carrinho","id","console","log","pai","map","elemento","paper","link","url","image","imageUrl","title","precoPai","preco","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Contexto } from '../../../Root/root';\nimport api from '../../../Services/cardServer.js';\nimport Api from '../../../Services/products';\nimport classe from './style';\nimport { Produtos } from '../Produtos';\nimport { Usuario } from '../../Form Login/index';\nimport users from '../../../Services/userServer';\n\nfunction Card() {\n  const User = useContext(Usuario);\n  const busca = useContext(Contexto);\n  const Cart = useContext(Produtos);\n  const estilo = classe();\n  const [cards, setCards] = useState();\n\n  let urls;\n\n  useEffect(() => {\n    setUrls();\n  }, [busca.pesquisa]);\n\n  async function setUrls() {\n    busca.pesquisa\n      ? (urls = `/promotions?_order=desc&_sort=id&title_like=${busca.pesquisa}`)\n      : (urls = '/promotions?_order=desc&_sort=id');\n\n    const response = await api.get(urls);\n    setCards(response.data);\n  }\n    async function adicionar(props) {\n\n    const currentUser = JSON.parse(localStorage.getItem('login'));\n    const carrinho = await Api.get(`/products&Usuario=${currentUser.id}`)\n\n    console.log(carrinho)\n    // const semelhante = validar.data.filter( e =>{\n    //  return(e.title === props.title && e.Usuario == props.id)\n    // })\n      \n\n    // const ID = currentUser.id;\n    // // props.id = props.id+1\n    // props.Usuario = ID\n\n    \n \n    // async function atualizar(){ \n    //   (props.quantidade = props.quantidade + 1 )\n    //     localStorage.setItem('aux',props.quantidade)\n    // return ( \n    //   await Api.put(`http://localhost:2000/products/${props.id}`,props)\n      \n    //   )}\n\n  \n    //   async function postar(){ \n    //     localStorage.setItem('aux',props.quantidade)\n    // return ( \n      \n    //   await Api.post(`http://localhost:2000/products`,props)\n    //   )}\n\n\n    // User.validn    // semelhante.length >= 1 ? atualizar()  :  postar();\n    \n    \n    \n    \n      \n    \n  }\n  return (\n    <div>\n      <Grid className={estilo.pai} container spacing={1} direction=\"row\">\n        {cards &&\n          cards.map((elemento) => (\n            <Grid item xs={3}>\n              <Paper className={estilo.paper}>\n                <>\n                  <a\n                    className={estilo.link}\n                    href={elemento.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    <img\n                      className={estilo.image}\n                      alt=\"imagem\"\n                      src={elemento.imageUrl}\n                    />\n                  </a>\n\n                  <a\n                    className={estilo.link}\n                    href={elemento.url}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                  >\n                    <Typography className={estilo.title}>\n                      {elemento.title}\n                    </Typography>\n                  </a>\n                  <div className={estilo.precoPai}>\n                    <span className={estilo.preco}>\n                      R$\n                      {elemento.price}\n                    </span>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={() => adicionar(elemento)}\n                    >\n                      Adicionar\n                    </Button>\n                  </div>\n                </>\n              </Paper>\n            </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}